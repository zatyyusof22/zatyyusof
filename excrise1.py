# -*- coding: utf-8 -*-
"""EXCRISE1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ofuzd4iKLc0hWw49z4mYFooFJcLFa4KB
"""

import seaborn as sns
iris = sns.load_dataset('iris') # returns a pandas dataframe
import pandas as pd

X_iris = iris.drop('species', axis=1)  
y_iris = iris['species']

import numpy as np
 
alist = [1, 2, 3, 4, 5]   # Define a python list. It looks like an np array
narray = np.array([1, 2, 3, 4]) # Define a numpy array
 
print(narray + narray)
print(alist + alist)

npmatrix1 = np.array([narray, narray, narray]) # Matrix initialized with NumPy arrays
npmatrix2 = np.array([alist, alist, alist]) # Matrix initialized with lists
npmatrix3 = np.array([narray, [1, 1, 1, 1], narray]) # Matrix initialized with both types
 
print(npmatrix1)
print(npmatrix2)
print(npmatrix3)

import seaborn as sns
iris = sns.load_dataset('iris') # returns a pandas dataframe
import pandas as pd

X_iris = iris.drop('species', axis=1)  
y_iris = iris['species']

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
#from sklearn.datasets import load_iris

iris = load_iris()
(X_iris, y_iris) = load_iris(return_X_y = True)
xtrain, xtest, ytrain, ytest = train_test_split(X_iris, y_iris, random_state = 0)

clf = SVC(kernel='rbf', C=1).fit(xtrain, ytrain)
print('Iris dataset')
print('Accuracy of RBF SVC classifier on training set: {:.2f}'
     .format(clf.score(xtrain, ytrain)))
print('Accuracy of RBF SVC classifier on test set: {:.2f}'
     .format(clf.score(xtest, ytest)))

from sklearn.metrics import classification_report

"""END OF SVM and RBF for IRIS dataset"""

#Using SVM and RBF 
#From Ainul Mardhiah
import pandas as pd
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split


xtrain, xtest, ytrain, ytest = train_test_split(X_iris, y_iris, random_state = 0)
clf = SVC(kernel='rbf', C=1).fit(xtrain, ytrain)
print('Iris dataset')
print('Accuracy of RBF SVC classifier on training set: {:.2f}'
     .format(clf.score(xtrain, ytrain)))
print('Accuracy of RBF SVC classifier on test set: {:.2f}'
     .format(clf.score(xtest, ytest)))

